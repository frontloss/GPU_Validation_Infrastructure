namespace Intel.VPG.Display.Automation
{
    internal enum QDCFlags
    {
        QDC_ALL_PATHS = 0x00000001,
        QDC_ONLY_ACTIVE_PATHS = 0x00000002,
        QDC_DATABASE_CURRENT = 0x00000004,
        QDC_VIRTUAL_MODE_AWARE = 0x00000008,
    }
    internal enum DISPLAYCONFIG_ROTATION : uint
    {
        DISPLAYCONFIG_ROTATION_IDENTITY = 1,
        DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
        DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
        DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
        DISPLAYCONFIG_ROTATION_FORCE_UINT32 = 0xFFFFFFFF
    }
    internal enum DISPLAYCONFIG_SCALING : uint
    {
        DISPLAYCONFIG_SCALING_IDENTITY = 1,
        DISPLAYCONFIG_SCALING_CENTERED = 2,
        DISPLAYCONFIG_SCALING_STRETCHED = 3,
        DISPLAYCONFIG_SCALING_ASPECTRATIO_CENTEREDMAX = 4,
        DISPLAYCONFIG_SCALING_CUSTOM = 5,
        DISPLAYCONFIG_SCALING_PREFERRED = 128,
        DISPLAYCONFIG_SCALING_FORCE_UINT32 = 0xFFFFFFFF
    }
    internal enum DISPLAYCONFIG_SCANLINE_ORDERING : uint
    {
        DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
        DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
        DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED,
        DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
        DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = 0xFFFFFFFF
    }
    internal enum DISPLAYCONFIG_MODE_INFO_TYPE : uint
    {
        DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
        DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
        DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = 0xFFFFFFFF
    }
    internal enum DISPLAYCONFIG_PIXELFORMAT : uint
    {
        DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
        DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
        DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
        DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
        DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = 0xffffffff
    }
    internal enum DISPLAYCONFIG_TOPOLOGY_ID : uint
    {
        DISPLAYCONFIG_TOPOLOGY_INTERNAL = 0x00000001,
        DISPLAYCONFIG_TOPOLOGY_CLONE = 0x00000002,
        DISPLAYCONFIG_TOPOLOGY_EXTEND = 0x00000004,
        DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 0x00000008,
        DISPLAYCONFIG_TOPOLOGY_NULL = 0x00000000,
        DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = 0xFFFFFFFF
    }
    internal enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY : uint
    {
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = 0x80000000,
        DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = 0xFFFFFFFF
    }

    public enum GFX_ESCAPE_CODE_T
    {
        // IMPORTANT:- When adding new escape code, add it at the end of the list, 
        // just before GFX_MAX_ESCAPE_CODES. the reason is that external test apps 
        // depend on the current order.

        // DO NOT ADD NEGATIVE ENUMERATORS
        GFX_ESCAPE_CODE_DEBUG_CONTROL = 0, // DO NOT CHANGE 
        GFX_ESCAPE_CUICOM_CONTROL,
        GFX_ESCAPE_GMM_CONTROL,
        GFX_ESCAPE_CAMARILLO_CONTROL,
        GFX_ESCAPE_ROTATION_CONTROL,
        GFX_ESCAPE_PAVP_CONTROL,
        GFX_ESCAPE_UMD_GENERAL_CONTROL,
        GFX_ESCAPE_RESOURCE_CONTROL,
        GFX_ESCAPE_SOFTBIOS_CONTROL,
        GFX_ESCAPE_ACPI_CONTROL,
        GFX_ESCAPE_CODE_KM_DAF,
        GFX_ESCAPE_CODE_PERF_CONTROL,
        GFX_ESCAPE_IGPA_INSTRUMENTATION_CONTROL,
        GFX_ESCAPE_CODE_OCA_TEST_CONTROL,
        GFX_ESCAPE_AUTHCHANNEL,
        GFX_ESCAPE_SHARED_RESOURCE,
        GFX_ESCAPE_PWRCONS_CONTROL,
        GFX_ESCAPE_KMD,
        GFX_ESCAPE_DDE,
        GFX_ESCAPE_IFFS,
        GFX_ESCAPE_TOOLS_CONTROL, //Escape for Tools
        GFX_ESCAPE_ULT_FW,
        // IMPORTANT:- Force it to 50, so GBG app code works even when we add new escape types..All escapes belonging to this escape ID will
        //      be processed by IGD itself
        GFX_ESCAPE_GBG_ESCAPE_TO_PROCESS = 50,
        // IMPORTANT:- Force it to 51, so GBG app code works even when we add new escape types..All escape codes sent with this escape ID will
        //      be forwarded to GBG helper agent library (as appropriate, the helper library will send it back to IGD)
        GFX_ESCAPE_GBG_ESCAPES_TO_FORWARD = 51,

        GFX_ESCAPE_KM_GUC,
        GFX_ESCAPE_EVENT_PROFILING,
        GFX_ESCAPE_WAFTR,

        GFX_ESCAPE_PERF_STATS = 100,


        GFX_ESCAPE_SW_DECRYPTION,

        GFX_ESCAPE_CHECK_PRESENT_DURATION_SUPPORT = 102,
        // NOTE: WHEN YOU ADD NEW ENUMERATOR, PLEASE UPDATE 
        //       InitializeEscapeCodeTable in miniport\LHDM\Display\AdapterEscape.c

        GFX_MAX_ESCAPE_CODES // MUST BE LAST 
    }

    internal enum GFX_ESCAPE_CODE
    {
        GFX_ESCAPE_CUICOM_CONTROL = 1 ,
        GFX_ESCAPE_SOFTBIOS_CONTROL = 8
    }
    internal enum TOOLS_ESCAPE_CODE
    {
        TOOL_ESC_READ_MMIO_REGISTER,//DP Applet Tool, Test Automation
        TOOL_ESC_DP_APPLET_MISC_FUNC,//DP Applet Tool
        TOOL_ESC_GET_PNM_PIXELCLK_DATA,//PNM TOOL
        TOOL_ESC_SET_PNM_PIXELCLK_DATA,//PNM TOOL
        TOOL_ESC_GET_PSR_RESIDENCY_COUNTER,//BLA Tool 
        TOOL_ESC_QUERY_DISPLAY_DETAILS,//DP Applet Tool 
        TOOL_ESC_SIMULATE_DP12_TOPOLOGY,//DP Topology Simulator
        // MAX_CUI_COM_FUNCTIONS should be the last value in this enum
        MAX_TOOLS_ESCAPES
    }
    internal enum CUI_COM_FUNCTIONS
    {
        COM_DETECT_DEVICE = 29
    }
    internal enum QDC_SDC_StatusCode
    {
        SUCCESS = 0,
        ERROR_INVALID_PARAMETER = 87,
        ERROR_NOT_SUPPORTED = 51,
        ERROR_ACCESS_DENIED = 5,
        ERROR_GEN_FAILURE = 31,
        ERROR_INSUFFICIENT_BUFFER = 122
    }
    internal enum DTDBlockInit
    {
        First = 54,
        Second = 72,
        Third = 90,
        Fourth = 108
    }
    internal enum DTDCategory
    {
        Timing,
        MachineName
    }
    internal enum DVMU4_STATUS
    {
        SUCCESS = 0,
        FAIL,
        NOT_OPEN,
        GET_VERSION,
        NOT_FOUND,
        ALREADY_OPEN,
        INVALID_PARAM,
        MEM_ALLOC_FAIL,
        VERIFY_FAILED,
        FILE_ERR,
        OUT_OF_RANGE,
        NOT_SUPPORTED,
        MUTEX_TIMEOUT,
        MUTEX_FAILED,
        NO_SIGNAL,
        ST_FAIL,
        TIMEOUT,
        FRAME_CAP,
        ABORTED,
    }

    public enum StubDriverServiceType
    {
        Undefined,
        PanelStubDriver,
        WNICStubDriver,
    }
}