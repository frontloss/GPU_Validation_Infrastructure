import "oaidl.idl";
import "ocidl.idl";

import "igfxBridgeUDT.idl";

	[
		object,
		uuid(EA9FB107-8829-4672-B16C-9E5B0EEFDE17),
		dual,
		helpstring("IDisplayUtil Interface"),
		pointer_default(unique)
	]
	interface IDisplayUtil : IDispatch
	{
		//Display Util related
		[id(1),  helpstring("method GetDeviceStatus")] HRESULT GetDeviceStatus([in]BSTR displayName,[in]DWORD index,[out]DWORD *pMonitorID, [in,out]DWORD *pDevType, [out]DWORD *pDevStatus,[out]BSTR *pErrorDescription);
		[id(2),  helpstring("method EnumActiveDisplay")] HRESULT EnumActiveDisplay([in]BSTR displayName,[in]DWORD id, [out]DWORD *pMonitorID,[out]DWORD *pDevType,[out]BSTR *pErrorDescription);
		//[id(3),  helpstring("method GetConfig")] HRESULT GetConfig([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(4),  helpstring("method GetMonitorID")] HRESULT GetMonitorID([in]BSTR deviceName,[in]DWORD index,[out]DWORD *pMonitorID,[out]BSTR *pErrorDescription);
		[id(5),  helpstring("method SingleDisplaySwitch")] HRESULT SingleDisplaySwitch([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(6),  helpstring("method DualDisplayClone")] HRESULT DualDisplayClone([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(7),  helpstring("method DualDisplayTwin")] HRESULT DualDisplayTwin([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(8),  helpstring("method ExtendedDesktop")] HRESULT ExtendedDesktop([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(9),  helpstring("method EnableRotation")] HRESULT EnableRotation([in]DWORD monitorID,[in]DWORD rotationAngle,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(10), helpstring("method DisableRotation")] HRESULT DisableRotation([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(11), helpstring("method IsRotationEnabled")] HRESULT IsRotationEnabled([in]DWORD monitorID,[out]BOOL *pRotationFlag,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(12), helpstring("method GetRotationAngle")] HRESULT GetRotationAngle([in]DWORD monitorID,[out]DWORD *pRotationAngle,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(13), helpstring("method Rotate")] HRESULT Rotate([in]DWORD monitorID,[in]DWORD rotationAngle,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(14), helpstring("method SetFullScreen")] HRESULT SetFullScreen([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(15), helpstring("method SetScreenCentered")] HRESULT SetScreenCentered([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(16), helpstring("method EnablePortraitPolicy")] HRESULT EnablePortraitPolicy([in]DWORD monitorID,[in]DWORD rotationAngle,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(17), helpstring("method DisablePortraitPolicy")] HRESULT DisablePortraitPolicy([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(18), helpstring("method EnableLandscapePolicy")] HRESULT EnableLandscapePolicy([in]DWORD monitorID,[in]DWORD rotationAngle,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(19), helpstring("method DisableLandscapePolicy")] HRESULT DisableLandscapePolicy([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(20), helpstring("method GetSupportedEvents")] HRESULT GetSupportedEvents([in]DWORD monitorID, DWORD* r_ulSupEvents,[out]BSTR *pErrorDescription);
		[id(21), helpstring("method RegisterEvent")] HRESULT RegisterEvent([in]BSTR eventName,[in]DWORD monitorID,[in]DWORD eventMask,[out]DWORD *pRegID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(22), helpstring("method UnRegisterEvent")] HRESULT UnRegisterEvent([in]DWORD regID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(23), helpstring("method GetAspectScalingCapabilities")] HRESULT GetAspectScalingCapabilities([in]DWORD monitorID,[in]DWORD dwOperatingMode,[out]DWORD *pAspectScalingCaps,[out]DWORD *pCurrentAspectScalingPreference,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(24), helpstring("method SetAspectPreference")] HRESULT SetAspectPreference([in]DWORD monitorID,[in]DWORD aspectScalingCaps,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(25), helpstring("method SetGammaRamp")] HRESULT SetGammaRamp([in]DWORD monitorID,[in]GAMMARAMP *pGammaramp,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(26), helpstring("method GetGammaRamp")] HRESULT GetGammaRamp([in]DWORD uidMonitor,[out]GAMMARAMP *pGammaramp,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(27), helpstring("method PopulateSetValidGamma")] HRESULT PopulateSetValidGamma([in]DWORD monitorID,[in]float gam,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(28), helpstring("method PopulateSetInvalidGamma")] HRESULT PopulateSetInvalidGamma([in]DWORD monitorID,[in]int rule,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		//[id(29), helpstring("method SetGetGamma")] HRESULT SetGetGamma([in]DWORD monitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(30), helpstring("method GetCloneRefreshRate")] HRESULT GetCloneRefreshRate([in]DISPLAY_CONFIG *pDispCfg,[out] REFRESHRATE pPrimaryRR[20],[out] REFRESHRATE pSecondaryRR[20],[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(31), helpstring("method SetCloneView")] HRESULT SetCloneView([in]DISPLAY_CONFIG *pDispCfg, [in]REFRESHRATE *pPrimaryRR,[in] REFRESHRATE *pSecondaryRR,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(32), helpstring("method GetDVMTData")] HRESULT GetDVMTData([out]IGFX_DVMT_1_0 *pBuffer,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(33), helpstring("method GetEDIDData")] HRESULT GetEDIDData([in, out]IGFX_EDID_1_0 *pBuffer,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(34), helpstring("method IsOverlayOn")] HRESULT IsOverlayOn([out]IGFX_OVERLAY_1_0 *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(35), helpstring("method GetOverScanData")] HRESULT GetOverScanData([in,out]IGFX_SCALING_1_0 *pData,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(36), helpstring("method SetOverScanData")] HRESULT SetOverScanData([in]IGFX_SCALING_1_0 *pData,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(37), helpstring("method IsDownScalingSupported")] HRESULT IsDownScalingSupported([in]IGFX_DOWNSCALING_DATA *pBuffer,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(38), helpstring("method IsDownScalingEnabled")] HRESULT IsDownScalingEnabled([out]int *pbIsEnabled,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(39), helpstring("method EnableDownScaling")] HRESULT EnableDownScaling([in,out]IGFX_DOWNSCALING_DATA *pBuffer,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(40), helpstring("method DisableDownScaling")] HRESULT DisableDownScaling([in,out]IGFX_DOWNSCALING_DATA *pBuffer,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);	
		[id(41), helpstring("method GetConfiguration")] HRESULT GetConfiguration([in,out]IGFX_DISPLAY_CONFIG_1_1 *pBuffer,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(42), helpstring("method SetConfiguration")] HRESULT SetConfiguration([in]IGFX_DISPLAY_CONFIG_1_1 *pBuffer,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(43), helpstring("method Overlay_Set")] HRESULT Overlay_Set([in,out]IGFX_OVERLAY_COLOR_SETTINGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(44), helpstring("method Overlay_Get")] HRESULT Overlay_Get([in,out]IGFX_OVERLAY_COLOR_SETTINGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(45), helpstring("method CVT_Get")] HRESULT CVT_Get([in,out]IGFX_FEATURE_SUPPORT_ARGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(46), helpstring("method SDVO_Set")] HRESULT SDVO_Set([in,out]IGFX_VENDOR_OPCODE_ARGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(47), helpstring("method GetSupportedConfiguration")] HRESULT GetSupportedConfiguration([in,out]IGFX_TEST_CONFIG *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(48), helpstring("method GetGraphicsModes")] HRESULT GetGraphicsModes([in,out]IGFX_VIDEO_MODE_LIST *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(49), helpstring("method GetSupportedGraphicsModes")] HRESULT GetSupportedGraphicsModes([in,out]IGFX_VIDEO_MODE_LIST *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(50), helpstring("method GetVBIOSVersion")] HRESULT GetVBIOSVersion([in,out]BSTR *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(51), helpstring("method GetGammaBrightnessContrast")] HRESULT GetGammaBrightnessContrast([in,out]IGFX_DESKTOP_GAMMA_ARGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		//[id(52), helpstring("method SetGamma")] HRESULT SetGamma([in]long x,[in,out]IGFX_DESKTOP_GAMMA_ARGS *pGammaArgs,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(53), helpstring("method SetGammaBrightnessContrast")] HRESULT SetGammaBrightnessContrast([in,out]IGFX_DESKTOP_GAMMA_ARGS *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(54), helpstring("method SetSystemConfigurationAll")] HRESULT SetSystemConfigurationAll([in,out]IGFX_SYSTEM_CONFIG_DATA *pSysConfigData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[in]DWORD opmode,[in]DWORD PriRotAngle,[in]DWORD SecRotAngle,[out]BSTR *pErrorDescription);
		[id(55), helpstring("method SetSystemConfiguration")] HRESULT SetSystemConfiguration([in,out]IGFX_SYSTEM_CONFIG_DATA *pSysConfigData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(56), helpstring("method GetSystemConfiguration")] HRESULT GetSystemConfiguration([in,out]IGFX_SYSTEM_CONFIG_DATA *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(57), helpstring("method SetMediaScalar")] HRESULT SetMediaScalar([in,out]IGFX_MEDIA_SCALAR *pMediaScalarData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(58), helpstring("method GetMediaScalar")] HRESULT GetMediaScalar([in,out]IGFX_MEDIA_SCALAR *pMediaScalarData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(59), helpstring("method InitilizeRemoveCustomModeArray")] HRESULT InitilizeRemoveCustomModeArray([in]DWORD monitorId,[in]DWORD i,[in]DWORD HzR,[in]DWORD VtR,[in]DWORD RR,[in]DWORD BPP,[in]DWORD Imode,[out]BSTR *pErrorDescription);
		[id(60), helpstring("method RemoveCustomMode")] HRESULT RemoveCustomMode([in,out]IGFX_CUSTOM_MODELIST *rcm,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(61), helpstring("method AddAdvancedCustomMode")] HRESULT AddAdvancedCustomMode([in,out]IGFX_ADD_ADVANCED_CUSTOM_MODE_DATA *pacmd, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(62), helpstring("method AddBasicCustomMode")] HRESULT AddBasicCustomMode([in,out]IGFX_ADD_BASIC_CUSTOM_MODE_DATA *pbcmd, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(63), helpstring("method GetCustomModeTiming")] HRESULT GetCustomModeTiming([in,out]IGFX_CUSTOM_MODE_TIMING_DATA *pcmt, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(64), helpstring("method GetCustomModeList")] HRESULT GetCustomModeList([in,out]IGFX_CUSTOM_MODELIST *pCustomerModeList, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(65), helpstring("method SetMediaScaling")] HRESULT SetMediaScaling([in,out]IGFX_MEDIA_SCALING_DATA *pMediaScalingData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(66), helpstring("method GetMediaScaling")] HRESULT GetMediaScaling([in,out]IGFX_MEDIA_SCALING_DATA *pMediaScalingData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(67), helpstring("method SetMediaColor")] HRESULT SetMediaColor([in,out]IGFX_MEDIA_COLOR_DATA *pMediaColorData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(68), helpstring("method GetMediaColor")] HRESULT GetMediaColor([in,out]IGFX_MEDIA_COLOR_DATA *pMediaColorData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(69), helpstring("method SetVideoQuality")] HRESULT SetVideoQuality([in,out]IGFX_VIDEO_QUALITY_DATA *pVideoQualityData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(70), helpstring("method GetVideoQuality")] HRESULT GetVideoQuality([in,out]IGFX_VIDEO_QUALITY_DATA *pVideoQualityData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(71), helpstring("method GetAviInfoFrame")] HRESULT GetAviInfoFrame([in,out]IGFX_AVI_INFOFRAME *pAVIFrameInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(72), helpstring("method SetAviInfoFrame")] HRESULT SetAviInfoFrame([in,out]IGFX_AVI_INFOFRAME *pAVIFrameInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
 		//[id(73), helpstring("method SetSystemConfigDataNView")] HRESULT SetSystemConfigDataNView([in,out]IGFX_SYSTEM_CONFIG_DATA_N_VIEW *pDataNView, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		//[id(74), helpstring("method GetSystemConfigDataNView")] HRESULT GetSystemConfigDataNView([in,out]IGFX_SYSTEM_CONFIG_DATA_N_VIEW *pDataNView, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);										 
		[id(75), helpstring("method GetAttachedDevicesXP")] HRESULT GetAttachedDevices([in]OSTYPE osType,[out]DWORD *pAttachedDevices,[out]BSTR *pErrorDescription);
		[id(76), helpstring("method EnumAttachedDevices")] HRESULT EnumAttachedDevices([out]DWORD *pAttachedDevices,[out]BSTR *pErrorDescription);
		[id(77), helpstring("method EnumAttachedDevices")] HRESULT ChangeActiveDevices([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,/*[in]*/ DISPLAY_DEVICE_CONFIG_FLAG dwFlags,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);

		[id(78), helpstring("method DummyFunction")] HRESULT DummyFunction([in]DISPLAY_RELATED *pDisplayRelated,[in]OPERATING_MODE *pOperatingMode,[in]NEW_DEVICE_TYPE *pDeviceType,[in]DISPLAY_DEVICE_STATUS *pDisplayDeviceStatus,[in]IGFX_DISPLAY_TYPES *pDisplayTypes,[in]GENERIC *pGeneric,[in]IGFX_MEDIA_FEATURE_TYPES *pMediaFeatureTypes,
		[in]IGFX_COLOR_QUALITIES *pColorQualities,[in]IGFX_TIMING_STANDARDS *pTimingStandards,[in]IGFX_CUSTOM_MODES *pCustomModes,[in]IGFX_DISPLAY_RESOLUTION_EX *Resolution,[in]IGFX_DISPLAY_POSITION *Position,REFRESHRATE *pRefreshRate,[in]DISPLAY_CONFIG_CODES *pDisplayConfigCodes,[in]DISPLAY_ORIENTATION *pDisplayOrientation, 
		[in]MEDIA_GAMUT_COMPRESSION_VALUES *pMediaGamutCompressionValues);

		[id(79), helpstring("method GetCurrentConfig")] HRESULT GetCurrentConfig([in, out]DEVICE_DISPLAYS *pDeviceDisplays,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(80), helpstring("method IsWOW64")] HRESULT IsWOW64(BOOL *pIsWOW64,BSTR *pErrorDescription);
		[id(81), helpstring("method DoEscape")] HRESULT DoEscape([in]OSTYPE osType,[in]BSTR *pKeyName,[out]BSTR *pErrorDescription);
		//[id(81), helpstring("method EnumExtendedDesktopDisplaySettings")] HRESULT EnumExtendedDesktopDisplaySettings([out]DISPLAY_MODE *pDisplay1Mode,[out]DISPLAY_MODE *pDisplay2Mode,[out]BSTR *pErrorDescription);
		[id(82), helpstring("method GetHueSaturation")] HRESULT GetHueSaturation([in,out]IGFX_HUESAT_INFO *pHueSat, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(83), helpstring("method SetHueSaturation")] HRESULT SetHueSaturation([in,out]IGFX_HUESAT_INFO *pHueSat, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);	
		[id(84), helpstring("method GetVideoQualityExtended")] HRESULT GetVideoQualityExtended([in,out]IGFX_VIDEO_QUALITY_DATA_EX *pVideoQualityEx, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(85), helpstring("method SetVideoQualityExtended")] HRESULT SetVideoQualityExtended([in,out]IGFX_VIDEO_QUALITY_DATA_EX *pVideoQualityEx, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(86), helpstring("method GetSystemConfigDataNViews")]HRESULT GetSystemConfigDataNViews([in,out]IGFX_SYSTEM_CONFIG_DATA_N_VIEWS *dataNView, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(87), helpstring("method SetSystemConfigDataNViews")]HRESULT SetSystemConfigDataNViews([in,out]IGFX_SYSTEM_CONFIG_DATA_N_VIEWS *dataNView, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);		
		[id(88), helpstring("method GetScaling")]HRESULT GetScaling([in,out]IGFX_SCALING_2_0 *pData,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(89), helpstring("method SetScaling")]HRESULT SetScaling([in,out]IGFX_SCALING_2_0 *pData,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(90), helpstring("method QueryforVideoModeList")] HRESULT QueryforVideoModeList([in,out] IGFX_VIDEO_MODE_LIST_EX *pVideoModeList,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(91), helpstring("method GetIndividualVideoMode")]HRESULT GetIndividualVideoMode([in,out] IGFX_DISPLAY_RESOLUTION_EX *pVideoMode,[in] DWORD index,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(92),  helpstring("method SetTriClone")] HRESULT SetTriClone([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,[in] DWORD tertiaryMonitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(93),  helpstring("method SetTriExtended")] HRESULT SetTriExtended([in]DWORD primaryMonitorID,[in] DWORD secondaryMonitorID,[in] DWORD tertiaryMonitorID,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(94), helpstring("method GetGamutData")] HRESULT GetGamutData([in, out]IGFX_GAMUT_EXPANSION *pGamutData,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(95), helpstring("method SetGamutData")] HRESULT SetGamutData([in, out]IGFX_GAMUT_EXPANSION *pGamutData,[in] float CSCMatrixRow1[3], [in] float CSCMatrixRow2[3], [in] float CSCMatrixRow3[3],[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(96), helpstring("method GetCSCData")] HRESULT GetCSCData([in, out]IGFX_SOURCE_DISPLAY_CSC_DATA *pCSCData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(97), helpstring("method SetCSCData")]HRESULT SetCSCData([in, out]IGFX_SOURCE_DISPLAY_CSC_DATA *pCSCData,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(98), helpstring("method GetVideoQualityExtended2")] HRESULT GetVideoQualityExtended2([in,out]IGFX_VIDEO_QUALITY_DATA_EX2 *pVideoQualityEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(99), helpstring("method SetVideoQualityExtended2")] HRESULT SetVideoQualityExtended2([in,out]IGFX_VIDEO_QUALITY_DATA_EX2 *pVideoQualityEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(100), helpstring("method GetMediaColorExtended2")] HRESULT GetMediaColorExtended2([in,out]IGFX_MEDIA_COLOR_DATA_EX2 *pMediaColorEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(101), helpstring("method SetMediaColorExtended2")] HRESULT SetMediaColorExtended2([in,out]IGFX_MEDIA_COLOR_DATA_EX2 *pMediaColorEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(102), helpstring("method GetAuxInfo")] HRESULT GetAuxInfo([in,out]IGFX_AUX_INFO *pAuxInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(103), helpstring("method SetAuxInfo")] HRESULT SetAuxInfo([in,out]IGFX_AUX_INFO *pAuxInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(104), helpstring("method GetSourceHdmiGBDdata")] HRESULT GetSourceHdmiGBDdata([in,out]IGFX_SOURCE_HDMI_GBD_DATA *pSourceHdmiGBDData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(105), helpstring("method SetSourceHdmiGBDdata")] HRESULT SetSourceHdmiGBDdata([in,out]IGFX_SOURCE_HDMI_GBD_DATA *pSourceHdmiGBDData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);		
		[id(106), helpstring("method GetSupportedConfigurationEx")] HRESULT GetSupportedConfigurationEx([in,out]IGFX_TEST_CONFIG_EX *pBuffer, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(107), helpstring("method GetColorGamut")] HRESULT GetColorGamut([in, out] IGFX_GAMUT *pGamutData, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(108), helpstring("method SetColorGamut")] HRESULT SetColorGamut([in, out]IGFX_GAMUT *pGamutData, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(109), helpstring("method GetXvYcc")] HRESULT GetXvYcc([in, out] IGFX_XVYCC_INFO *pXvyccData, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(110), helpstring("method SetXvYcc")] HRESULT SetXvYcc([in, out] IGFX_XVYCC_INFO *pXvyccData, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(111), helpstring("method GetYcBcr")] HRESULT GetYcBcr([in, out] IGFX_YCBCR_INFO *pYCBCRData, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(113), helpstring("method SetYcBcr")] HRESULT SetYcBcr([in, out] IGFX_YCBCR_INFO *pYCBCRData, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(114), helpstring("method GetGOPVersion")] HRESULT GetGOPVersion([in, out] IGFX_GOP_VERSION *pGopVersion, [out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		
		[id(117), helpstring("method GetVideoModeListEx")] HRESULT GetVideoModeListEx([in,out] IGFX_VIDEO_MODE_LIST_EX *pVideoModeListEx,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(118), helpstring("method GetVideoGamutMapping")] HRESULT GetVideoGamutMapping([in,out]IGFX_MEDIA_GAMUT_MAPPING *pMediaGamutMapping, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(119), helpstring("method SetVideoGamutMapping")] HRESULT SetVideoGamutMapping([in,out]IGFX_MEDIA_GAMUT_MAPPING *pMediaGamutMapping, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(200), helpstring("method GetChipSetInformation")] HRESULT GetChipSetInformation([in, out]DWORD *pChipsetInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode, [out]BSTR *pErrorDescription);
		[id(201), helpstring("method GetVideoFeatureSupportList")] HRESULT GetVideoFeatureSupportList([in,out] IGFX_FEATURE_SUPPORT_ARGS *pVideoSupportList, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(202), helpstring("method SetMediaScalingEx2")] HRESULT SetMediaScalingEx2([in, out]IGFX_MEDIA_SCALING_DATA_EX2 *mediaScalingEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(203), helpstring("method GetMediaScalingEx2")] HRESULT GetMediaScalingEx2([in, out]IGFX_MEDIA_SCALING_DATA_EX2 *mediaScalingEx2, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(204), helpstring("method ReadRegistryEnableNLAS")] HRESULT ReadRegistryEnableNLAS(/*[in,out]*/DWORD *regvalue);
		[id(205), helpstring("method ReadRegistryNLASVerticalCrop")] HRESULT ReadRegistryNLASVerticalCrop(/*[in,out]*/float *regvalue);
		[id(206), helpstring("method ReadRegistryNLASHLinearRegion")] HRESULT ReadRegistryNLASHLinearRegion(/*[in,out]*/float *regvalue);
		[id(207), helpstring("method ReadRegistryNLASNonLinearCrop")] HRESULT ReadRegistryNLASNonLinearCrop(/*[in,out]*/float *regvalue);
		[id(208),  helpstring("method EnumAttachableDevices")] HRESULT EnumAttachableDevices([in]BSTR displayName,[in]DWORD index,[out]DWORD *pMonitorID, [in,out]DWORD *pDevType, [out]DWORD *pDevStatus,[out]BSTR *pErrorDescription);
		[id(209),  helpstring("method SetGraphcisRestoreDefault")] HRESULT SetGraphcisRestoreDefault([in,out] IGFX_RESTORE_GRAPHICS_DEFAULT_INFO *pGraphicsRestoreDefault, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(210), helpstring("method GetDisplayInformation")] HRESULT GetDisplayInformation([in, out]DWORD *pDisplayInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode, [out]BSTR *pErrorDescription);
		[id(211), helpstring("method GetIndividualRefreshRate")] HRESULT GetIndividualRefreshRate([in, out]REFRESHRATE *rr, [in, out]REFRESHRATE refreshrate[20], [in]DWORD index, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(212), helpstring("method GetBusInfo")] HRESULT GetBusInfo([in,out]IGFX_BUS_INFO *pBusInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(213), helpstring("method SetBusInfo")] HRESULT SetBusInfo([in,out]IGFX_BUS_INFO *pBusInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		
		[id(215), helpstring("method GetAviInfoFrameEx")] HRESULT GetAviInfoFrameEx([in,out]IGFX_AVI_INFOFRAME_EX *pAVIFrameInfoEx, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(216), helpstring("method SetAviInfoFrameEx")] HRESULT SetAviInfoFrameEx([in,out]IGFX_AVI_INFOFRAME_EX *pAVIFrameInfoEx, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);

		[id(217), helpstring("method GetBezel")] HRESULT GetBezel([in,out] IGFX_BEZEL_CONFIG *pBezelConfig, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(218), helpstring("method SetBezel")] HRESULT SetBezel([in,out] IGFX_BEZEL_CONFIG *pBezelConfig, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);

		[id(219), helpstring("method GetCollageStatus")] HRESULT GetCollageStatus([in,out] IGFX_COLLAGE_STATUS *pCollageStatus, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(220), helpstring("method SetCollageStatus")] HRESULT SetCollageStatus([in,out] IGFX_COLLAGE_STATUS *pCollageStatus, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);

		[id(221), helpstring("method SetAudioTopology")] HRESULT SetAudioTopology([in,out] IGFX_AUDIO_FEATURE_INFO *pAudioFeatureInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(222), helpstring("method GetAudioTopology")] HRESULT GetAudioTopology([in,out] IGFX_AUDIO_FEATURE_INFO *pAudioFeatureInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(223), helpstring("method EnableAudioWTVideo")] HRESULT EnableAudioWTVideo([in,out] IGFX_AUDIO_FEATURE_INFO *pAudioFeatureInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);
		[id(224), helpstring("method DisableAudioWTVideo")] HRESULT DisableAudioWTVideo([in,out] IGFX_AUDIO_FEATURE_INFO *pAudioFeatureInfo, [out]IGFX_ERROR_CODES *pExtraErrorCode,[out]BSTR *pErrorDescription);


		/*To Delete
		[id(92), helpstring("method GetIndividualCfg")] HRESULT GetIndividualCfg([in,out] IGFX_DISPLAY_CONFIG_DATA_EX *pVideoMode, [in] DWORD index,[out]IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);
		[id(93), helpstring("method QueryforDispCfg")] HRESULT QueryforDispCfg([in,out] IGFX_SYSTEM_CONFIG_DATA_N_VIEW *pVideoModeList,[out] IGFX_ERROR_CODES *pExtraErrorCode,[out] BSTR *pErrorDescription);*/
	}


