
===================================================
Display Dev BAT 1.0 Binary Download and Installation
===================================================

    1. Download the latest DisplayAutomation2.0 CI binaries from Ubit server(http://ubit-gfxdispval.intel.com/overview/74) .
	2. Download "DisplayAutomation2.0_x64.zip and unzip.
	3. Run 'setup.bat'in Admin mode which is present in \Output folder ( unzipped binary ) on the Target machine. 
     		-> This installs all required packages(like vcredist_x64.exe, python-2.7, DIVA etc..,) to run the tests.
	5. Run 'env_setup.bat'in Admin mode which is present in \Output folder ( unzipped binary ) on the Target machine.( this is needed to initialize the environment variables)
	6. Install Additional Binaries - ( Refer - "Steps to Install - Additional Binaries"   Given below)
	7. Restart the machine.

===================================================
Display Dev BAT 1.0 - Test Execution and Logging From Pre-defined test command lines:
===================================================

Steps:  1. Open command prompt in Admin mode under \Output root folder.
	2. Run required test command line which is available in XML file named "display_dev_bat_v1.xml".
		-> Open the .xml in a notepad(or some editor) go to required command line.
 	        -> Copy-Paste the command line on command prompt and press Enter to run the test.
		-> Note : if you prefer to have detailed log message from test - you need to append "-LOGLEVEL Debug" without quotes.

Results:
	1. The Logs generated by the test can be found under Logs folder: "DisplayAutomation2.0\Output\Logs" as
		-> 'display_dev_bat_v1.log'


===================================================
Display BAT UI - Manual (  To Generate custom test command line ) 
===================================================

Steps:  Display BAT GUI Usage (To RUN BAT suite for more commandlines / custom usage of BAT test )
	1. Open command prompt in Admin mode from "Output" root folder and run command "python \Tests\Display_Dev_BAT\bat_ui.py".
	2. Display BAT v1.0 UI / Application will open.
	3. Select "Display Environment" as Simulated or Physical - based on your requirement.
		( "Simulated" for simulating display panel of tester choice , "Physical" to run test on actual panel connected to Target)
		Note: Refer "Steps to Install\Uninstall - GfxValSim Driver" for Simulation of Displays on Yangra.
	4. Select required displays, Display1, Display2, Display3, if no display is selected it takes default as "DP_A" - which is eDP.
	5. Select EDID\DPCDs for Display1, Display2, Display3 respectively. ( applicable only when Environment == "Simulated" )  
	6. Select "User Events" based on test needs, from drop down choice. [ example : 2KClip or 4KClip or BOTH, which will play 2k(MPO1) or 4k(MPO2) or BOTH the video clips].
	7. Select "Power Events" based on test needs, from drop down choice. [ example : CS S3 S4 etc ]
	8. Select "Mode Level" based on test needs, from drop down choice. [ example : MMM (Minimum,Middle,Maximum) for applying Limited modes (L0) and ALL (L1) for applying ALL modes].
	9. Click "ADD Config Test" which will generate required command line and auto append to "run_bat.bat" batch file. [ Note : Generated command line will be shown in log window UI]
	10. Select "Other Tests" for testing additional set of test case [ example : PSR1 and PSR2 tests to run].
	11. Click "ADD Other Test" which will generate required command line and auto append to "run_bat.bat" batch file. 
	12. Click "Run" Button to start / Execute all selected test command line one by one.
		Note : To Review or Edit test command lines present in run_bat.bat batch file, Click "Open BAT" button.
	13. To reset all fields, click on "Reset" button.
    	14. Logs of each test case generated in "Output" root is renamed and stored as BAT_Test_Logs_1, BAT_Test_Logs_2,.........and so on.
	15. Click "Clear Log" to clean log window UI.
	    Note : Log window UI will display selected command line along with test count.
	       
============================================
Steps to Install - Additional Binaries which is required for testing PSR / MPO ( Video clips and other tools ) 
============================================
Additional Binary package is available in Following Share location :
[ Link \ Location : https://gfx-assets.iind.intel.com/artifactory/gfx-display-assets-ba/MiscSoftwares/display_tools/ ( Pick Latest Version)

Step-1: Pre-Requisites for running Display config test with MPO and PSR tests
	Note : Video clips are not part of Display Automation 2.0 binary - ( due to GTA requirement )
	Hence it is necessary to copy following additional set of test binaries to target machine [ mainly for local test exectuion ]
	Binary needs to be copied in specific path.
	For MPO - Need to required video clips in following location     
		1. In Local Disk C drive, check "SHAREDBINARY\920697932\MPO" folder existed or not.
	For PSR / PSR2 - Test needs SocWatch - Hence copy Socwatch in following location.
		2. In Local Disk C drive, check "SHAREDBINARY\920697932\SocWatch" folder existed or not.
		3. Install "WDTF64.BAT" in admin mode ( this is needed for PSR testing - to switch AC/DC mode)

	Note : Make sure system BIOS setting is appropriate , so that system can Enter/Resume Power state without any issue.


===================================================
Steps to Install\Unistall - GfxValSim Driver
===================================================
To run tests, need to install GfxValSim Driver in Normal\Test Mode, but not in Safe Mode :

    Steps to Install - GfxValSim:
    step-1: Open command prompt in Admin mode from "Output" root folder and run command "python \Libs\Core\sw_sim\valsim_setup.py -action install".

    Steps to UnInstall - GfxValSim:
    step-1: Open command prompt in Admin mode from "Output" root folder and run command "python \Libs\Core\sw_sim\valsim_setup.py -action uninstall".

===================================================
Only For Physically connected Display's
===================================================
To use\test Physically connected Displays,make sure "GfxValSim" driver is installed and sink_simualtion DISABLED .Then only display will come on external displays.
For manual Test's we need to disable 3 important things.
1. Simulation_Type make it as "NONE". So, no need to plug/unplug displays through Gfxvalsim/DFT Simulator.
2. Sink_simulation DISABLE. Then only display will come on external panels.

    step-1: Open command prompt in Admin mode from "Output" root folder and run command "python \Libs\env_settings.py -simulation_type NONE -sink_simulation DISABLE".

============================================
Known Limitation / Issues.
============================================ 
1. eDP - Simulation is currently not supported. ( However test will run -if physical eDP panel is connected)
2. MIPI - Simulation is currently not supported.( However test will run -if physical Mipi panel is connected)
3. VBT simulation is not currently Enabled for BAT testing. ( Handling Reboot case - Needs to be explored )
===============================================
