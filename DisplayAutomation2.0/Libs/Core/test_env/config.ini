############################################################################################
#     Structure details for display engine verifier, this is a global structure            # 
#     any modification will have over all platform display engine verification impact.     #
############################################################################################
#
#     class flag_bits (ctypes.LittleEndianStructure):					   
#    _fields_ = [
#                ("clock_verifier",  ctypes.c_uint8, 1),        # bit0
#                ("plane_verifier",  ctypes.c_uint8, 1),        # bit1
#                ("pipe_verifier",   ctypes.c_uint8, 1),	    # bit2
#                ("transcoder_verifier", ctypes.c_uint8, 1),	# bit3
#                ("ddi_verifier", ctypes.c_uint8, 1),		    # bit4
#                ("powerwell_verifier", ctypes.c_uint8, 1),	    # bit5
#                ("watermark_verifier", ctypes.c_uint8, 1),	    # bit6
#                ("dip_ctrl_verifier", ctypes.c_uint8, 1),	    # bit7
#                ("fbc_verifier", ctypes.c_uint8, 1),	        # bit8
#                ("phy_buf_verifier", ctypes.c_uint8, 1),	    # bit9
#		         ("reserved", ctypes.c_uint8, 22)               # bit10 to 31 reserved
#                ]
#			
#############################################################################################
#     Structure details for platform feature control flags, this is a global control which  #
#     will impact complete automation environment                                           #
#############################################################################################
#
#     class features (ctypes.LittleEndianStructure):
#    _fields_ = [
#                ("skip_S3",  ctypes.c_uint8, 1),		# bit0
#                ("skip_S4",  ctypes.c_uint8, 1),		# bit1
#                ("skip_CS",   ctypes.c_uint8, 1),		# bit2
#                ("skip_Reboot", ctypes.c_uint8, 1),		# bit3
#                ("skip_LidSwitch", ctypes.c_uint8, 1),		# bit4
#                ("skip_ACDC", ctypes.c_uint8, 1),		# bit5
#                ("reserved", ctypes.c_uint8, 26)		
#                ]
#
#
#############################################################################################
#     Structure details for platform verification control flags, this is a global control which  #
#     will impact complete automation environment                                           #
#############################################################################################
#
#     class verifier (ctypes.LittleEndianStructure):
#    _fields_ = [
#                ("underun",  ctypes.c_uint8, 1)  # bit0
#                ("tdr",  ctypes.c_uint8, 1),  # bit1
#                ("bspec_violation",   ctypes.c_uint8, 1),  # bit2
#                ("audio_playback_verification",   ctypes.c_uint8, 1),  # bit3
#                ("dpcd_violation",   ctypes.c_uint8, 1),  # bit4
#                ("sensor_verification", ctypes.c_uint8, 1),  # bit 5
#                ("reserved", ctypes.c_uint8, 1),  # bit 6
#                ("is_diana_analysis",   ctypes.c_uint8, 1)  # bit7
#                ]
#
#
#############################################################################################

[GENERAL]
# silicon_type by default SOC, based on environment set it to  SIMULATOR or EMULATOR
silicon_type = SOC
under_run_verifier = ENABLE
windod = DISABLE
state_separation = DISABLE
# Global flag to enable/disable bug reporting to GDHM
GDHM_BUG = ENABLE
# Global flag to enable/disable assert check for each test case
ASSERT_CHECK = ENABLE
# Global flag to select which ETLs to be pushed to GDHM for further analysis. options: ALL, FAIL_ONLY
GDHM_ETL = FAIL_ONLY
#Â Force Virtual Display plug in case of Headless boot
force_vd = DISABLE
# hw_image_capture_type by default writeback, based on image capture mechanism
hw_image_capture_type = WRITEBACK
#Flag to Enable/Disable Bullseye coverage by setting environment setting COVFILE
bullseye = DISABLE
# Flag to enable/disable MST SidebandMessage Multiplier
mst_sideband_multiplier  = DISABLE
# flag to enable/disable loglevel debug
collect_logs = FALSE

[SIMULATION]
# Options for simulation_type are GFXVALSIM, SHE, MANUAL, NONE, HYBRID
simulation_type = GFXVALSIM
sink_simulation = ENABLE
lfp_simulation = ENABLE
sim_operating_mode = 0x00
she_config = SHE_CFG4

[DEBUG]

[CRC]
# Options start with crc
crc_stimuli = DIRECTXAPP
crc_enable = FALSE
crc_presi = NONE

[DISPLAY_ENGINE_VERIFIERS]
GLK = 0x1FF
KBL = 0x1FF
CNL = 0x1BE
ICL = 0x1FF
ICLLP = 0x3FF
LKF1 = 0x1FF
ICLHP = 0x1FF
TGL = 0x3FF
CFL = 0x1FF
SKL = 0x1FF
JSL = 0x1FF
RYF = 0x18E
DG1 = 0x3FF
RKL = 0x3DF
DG2 = 0x1FF
ADLS = 0x2DF
ADLP = 0x3FF
MTL = 0x3BF
ELG = 0x1BF
LNL = 0x1BF
PTL = 0x19F
NVL = 0x19F
CLS = 0x19E

[DISPLAY_FEATURES_CONTROL_FLAGS]
GLK = 0xFF
KBL = 0xFF
CNL = 0xFF
ICL = 0xFF
ICLLP = 0xFF
LKF1 = 0xFF
ICLHP = 0xFF
TGL = 0xFF
CFL = 0xFF
SKL = 0xFF
JSL = 0xFF
RYF = 0xFF
RKL = 0xFF
ADLS = 0xFF
ADLP = 0xFF
MTL = 0xFF
ELG = 0x0
LNL = 0xFF
PTL = 0xFF
NVL = 0xFF
CLS = 0xFF

[VERIFIER_CFG]
# Flag to override verification bit to disable particular verification from platform verification config.
override_verifier_cfg  = 0xFF
add_verifier_cfg  = 0x0
GLK = 0x03
KBL = 0x03
CNL = 0x03
CFL = 0x03
SKL = 0x03
ICLLP = 0x97
LKF1 = 0x97
TGL = 0x97
JSL = 0x97
RYF = 0x97
DG1 = 0x97
RKL = 0x97
ADLS = 0x97
DG2 = 0x97
ADLP = 0x97
MTL = 0x97
ELG = 0x97
LNL = 0x97
PTL = 0x97
NVL = 0x97
CLS = 0x97
